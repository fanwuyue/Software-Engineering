<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         id="schedule-console" version="3.0">

    <!-- 配置 web.xml，使其具有 springmvc 特性，主要配置两处，一个是 ContextLoaderListener，一个是 DispatcherServlet -->

    <!-- spring mvc 配置 -->
    <!-- 1. 配置 DispatcherServlet 表示，该工程将采用 springmvc 的方式。 -->
    <servlet>
        <servlet-name>spring</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!-- 启动项目的时候要加载的配置文件 -->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath*:spring-mvc.xml</param-value>
        </init-param>
        <init-param>
            <param-name>dispatchOptionsRequest</param-name>
            <param-value>true</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>spring</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <!-- 2.spring 配置 : 配置 ContextLoaderListener 表示，该工程要以 spring 的方式启动. 启动时会默认在 / WEB-INF 目录下查找 applicationContext.xml
  作为 spring 容器的配置文件，该文件里可以初始化一些 bean-->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!-- 指定 Spring Bean 的配置文件所在目录。默认配置在 WEB-INF 目录下 -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath*:applicationContext.xml</param-value>
    </context-param>


    <welcome-file-list>
        <welcome-file>/WEB-INF/index.jsp</welcome-file>
    </welcome-file-list>

</web-app>